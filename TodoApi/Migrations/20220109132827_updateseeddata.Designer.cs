// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoApi.EntityFramework;

namespace TodoApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220109132827_updateseeddata")]
    partial class updateseeddata
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.22")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("TodoApi.Entities.Person", b =>
                {
                    b.Property<int>("PersonId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PersonId");

                    b.ToTable("Persons");

                    b.HasData(
                        new
                        {
                            PersonId = 1,
                            Designation = "Clerk",
                            Name = "John Drew"
                        },
                        new
                        {
                            PersonId = 2,
                            Designation = "Engineer",
                            Name = "James Dave"
                        });
                });

            modelBuilder.Entity("TodoApi.Entities.TodoItem", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PersonId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId");

                    b.HasIndex("PersonId");

                    b.ToTable("TodoItems");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            Description = "Please send the work email to Mark",
                            PersonId = 1,
                            Title = "Send Email to Mark"
                        },
                        new
                        {
                            ItemId = 2,
                            Description = "Please contact James for XYZ reasons",
                            PersonId = 2,
                            Title = "Contact James"
                        },
                        new
                        {
                            ItemId = 3,
                            Description = "Please contact James for XYZ reasons",
                            PersonId = 2,
                            Title = "Contact James"
                        },
                        new
                        {
                            ItemId = 4,
                            Description = "Please pick up Task2",
                            PersonId = 1,
                            Title = "Please pick up Task2"
                        });
                });

            modelBuilder.Entity("TodoApi.Entities.TodoItem", b =>
                {
                    b.HasOne("TodoApi.Entities.Person", "Person")
                        .WithMany("TodoItems")
                        .HasForeignKey("PersonId");
                });
#pragma warning restore 612, 618
        }
    }
}
